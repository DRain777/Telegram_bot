import telebot
from telebot import types
from datetime import datetime

bot = telebot.TeleBot("7636140010:AAHS4Ko-wd5fpspkQOQn50z-NkFdWuJpJbk")

# –•—Ä–∞–Ω–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ë–î)
user_data = {}

@bot.message_handler(commands=["start"])
def main(message):
    user_id = message.from_user.id
    user_data[user_id] = {"joined_date": datetime.now()}  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –¥–∞—Ç—É –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
    
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∞", callback_data="pay"),
        types.InlineKeyboardButton("üìÖ –í—Ä–µ–º—è –≤ –≥—Ä—É–ø–ø–µ", callback_data="old"),
        types.InlineKeyboardButton("üåê –°–∞–π—Ç", url="https://coinmarcetcap.com"),
    )
    
    bot.send_message(
        message.chat.id, 
        "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", 
        reply_markup=markup
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üí≥ –û–ø–ª–∞—Ç–∞"
def handle_payment_options(call):
    user_id = call.from_user.id
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("üí∞ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ (USDT)", callback_data="pay_crypto"),
        types.InlineKeyboardButton("üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞", callback_data="pay_card"),
        types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main"),
    )
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:",
        reply_markup=markup
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìÖ –í—Ä–µ–º—è –≤ –≥—Ä—É–ø–ø–µ"
def handle_group_time(call):
    user_id = call.from_user.id
    if user_id in user_data:
        join_date = user_data[user_id]["joined_date"]
        days_in_group = (datetime.now() - join_date).days
        bot.answer_callback_query(
            call.id,
            f"–í—ã –≤ –≥—Ä—É–ø–ø–µ —É–∂–µ {days_in_group} –¥–Ω–µ–π!",
            show_alert=True
        )
    else:
        bot.answer_callback_query(
            call.id,
            "–í—ã –Ω–µ –≤ –≥—Ä—É–ø–ø–µ. –í—Å—Ç—É–ø–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤—Ä–µ–º—è!",
            show_alert=True
        )

# –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "pay":
        handle_payment_options(call)
    elif call.data == "old":
        handle_group_time(call)
    elif call.data == "pay_crypto":
        bot.answer_callback_query(call.id, "–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã USDT: TABC123...")
    elif call.data == "pay_card":
        bot.answer_callback_query(call.id, "–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–∞—Ä—Ç—ã: 1234 5678 9012 3456")
    elif call.data == "back_to_main":
        bot.delete_message(call.message.chat.id, call.message.message_id)
        main(call.message)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

bot.polling(none_stop=True)